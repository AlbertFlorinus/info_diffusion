# This workflow will IF changes are detected in the following folders: simulation, test, requirements.txt, .github/workflows,
# run lint and run unittests for python 3.10 and 3.10, with and without orjson
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: Python application

on:
  pull_request:
    branches: 
      - main
      - devops

permissions:
  contents: read
  pull-requests: read

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
      contents: read
    # Set job outputs to values from filter step
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2.11.1
      id: filter
      with:
        filters: |
          test:
            - 'test/**'
          simulation:
            - 'simulation/**'
          requirements:
            - 'requirements.txt'
          workflow:
            - '.github/workflows/*'

  build:
    needs: changes
    # Only run if critical changes were detected
    if: ${{ needs.changes.outputs != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - uses: actions/cache@v3
      with:
        path: venv
        key: ${{ runner.os }}-venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/*requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-
        
    - name: Existing hash
      if: steps.setup-python.outputs.cache-hit == 'true'
      run:
        . venv/bin/activate
    - name: Install dependencies
    # installs requirements.txt but NOT orjson
      if: steps.setup-python.outputs.cache-hit != 'true'
      run: |
        python -m venv venv
        . venv/bin/activate
        if [ -f requirements.txt ]; then pip install -r <(grep -vE '\<orjson\>' requirements.txt); fi
      
    - name: Lint with flake8
    # fixar detta imorgon
      if: 1==0
    #attempts to download flake8 to cover when the requirements.txt is updated and flake8 is not included
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run unittests without orjson
      run: |
        . venv/bin/activate
        python -m unittest discover

    - name: Run unittests with orjson
    # this could be changed to only run tests which loads the json file?
      run: |
        . venv/bin/activate
        pip install orjson
        python -m unittest discover
        pip uninstall -y orjson